// # Intrebari la tema "Sintaxa Dockerfile"

$CATEGORY: 04_dockerfile_i/1_knowledge

::04k001:: [markdown] Ce este contextul de construire?
{
    =[markdown] Este directorul în care se află fișierul `Dockerfile`.
    ~[markdown] Este directorul în care se află fișierul `docker-compose.yml`.
    ~[markdown] Este directorul din care se execută comanda `docker build`.
    ~[markdown] Este imaginea folosită pentru construirea altor imagini.
}

::04k002:: [markdown] Prin care comandă se specifică imaginea de bază?
{
    =[markdown] `FROM`
    ~[markdown] `BASE`
    ~[markdown] `BASE_IMAGE`
    ~[markdown] `BASE_IMAGE_NAME`
}

::04k003:: [markdown] Eticheta text specială care indică, de exemplu, versiunea imaginii sau caracteristicile sale se numește
{
    =[markdown] `tag`
    ~[markdown] `versiune`
    ~[markdown] `metadate`
    ~[markdown] `atribut`
}

::04k004:: [markdown] La specificarea imaginii de bază se poate specifica eticheta care corespunde versiunii specifice a imaginii de bază. Dacă eticheta nu este specificată, atunci va fi utilizată eticheta
{
    =[markdown] `latest`
    ~[markdown] `current`
    ~[markdown] `newest`
    ~[markdown] `recent`
}

::04k005:: [markdown] Dacă imaginea de bază nu este specificată, atunci va fi utilizată imaginea de bază
{
    =[markdown] `scratch`
    ~[markdown] `empty`
    ~[markdown] `none`
    ~[markdown] `null`
}

::04k006:: [markdown] Prin care comandă se specifică metadatele imaginii?
{
    =[markdown] `LABEL`
    ~[markdown] `META`
    ~[markdown] `METADATA`
    ~[markdown] `METAINFO`
}

::04k007:: [markdown] Prin care comandă se specifică argumentele de construire?
{
    =[markdown] `ARG`
    ~[markdown] `ARGUMENT`
    ~[markdown] `BUILD_ARG`
    ~[markdown] `BUILD_ARGUMENT`
}

::04k008:: [markdown] Prin care comandă se specifică punctul de intrare pentru rularea containerului?
{
    =[markdown] `CMD`
    ~[markdown] `EXEC`
    ~[markdown] `RUN`
    ~[markdown] `START`
}

::04k009:: [markdown] Pentru a copia fișiere și directoare din contextul de construire în sistemul de fișiere al imaginii, se folosește comanda
{
    =[markdown] `COPY`
    ~[markdown] `MOVE`
    ~[markdown] `INSERT`
    ~[markdown] `PASTE`
}

::04k010:: [markdown] Imaginea containerului este construită implicit pe baza descrierii fișierului
{
    =[markdown] `Dockerfile`
    ~[markdown] `docker-compose.yaml`
    ~[markdown] `docker-image.def`
    ~[markdown] `image.json`
}

::04k011:: [markdown] Pentru a descărca un arhivă de la o adresă URL și copia în imaginea se folosește comanda
{
    =[markdown] `ADD`
    ~[markdown] `COPY`
    ~[markdown] `GET`
    ~[markdown] `DOWNLOAD`
}

::04k012:: [markdown] Executarea unei anumite comenzi la construirea imaginii containerului este determinată de directiva
{
    =[markdown] `RUN`
    ~[markdown] `EXEC`
    ~[markdown] `CMD`
    ~[markdown] `DO`
}

::04k013:: [markdown] Pentru a specifica directorul de lucru în care se vor executa toate următoarele comenzi, se folosește comanda
{
    =[markdown] `WORKDIR`
    ~[markdown] `WORK`
    ~[markdown] `DIR`
    ~[markdown] `CD`
}

::04k014:: [markdown] Schimbarea utilizatorului în imagine se poate face cu ajutorul comenzii
{
    =[markdown] `USER`
    ~[markdown] `CHANGE_USER`
    ~[markdown] `SWITCH_USER`
    ~[markdown] `CHOWN`
}

::04k015:: [markdown] Pentru copierea fisierului `php-fpm.conf` din directorul `files/configs` în directorul `/etc/php` al imaginii, se folosește comanda
{
    =[markdown] `COPY files/configs/php-fpm.conf /etc/php`
    ~[markdown] `COPY /etc/php files/configs/php-fpm.conf`
    ~[markdown] `COPY /etc/php/php-fpm.conf files/configs`
    ~[markdown] `COPY /files/configs/php-fpm.conf /etc/php`
}

::04k016:: [markdown] Pentru a crea directorul `/var/www` în imagine, se folosește comanda
{
    =[markdown] `RUN mkdir /var/www`
    ~[markdown] `COPY /var/www`
    ~[markdown] `CREATE /var/www`
    ~[markdown] `MKDIR /var/www`
}

::04k017:: [markdown] Pentru a instala pachetul `nginx` în imagine, se folosește comanda
{
    =[markdown] `RUN apt-get install -y nginx`
    ~[markdown] `COPY apt-get install -y nginx`
    ~[markdown] `INSTALL nginx`
    ~[markdown] `ADD apt-get install -y nginx`
}

::04k018:: [markdown] Pentru a executa comanda `nginx -g "daemon off;"` la rularea containerului, se folosește comanda
{
    =[markdown] `CMD ["nginx", "-g", "daemon off;"]`
    ~[markdown] `RUN ["nginx", "-g", "daemon off;"]`
    ~[markdown] `START ["nginx", "-g", "daemon off;"]`
    ~[markdown] `EXEC ["nginx", "-g", "daemon off;"]`
}

::04k019:: [markdown] Reinnoirea listelor de pachete și a pachetelor în imaginea pe baza OS Ubuntu se poate face cu ajutorul comenzii
{
    =[markdown] `RUN apt-get update && apt-get -y upgrade`
    ~[markdown] `RUN apt-get update`
    ~[markdown] `RUN apt-get -y upgrade`
    ~[markdown] `UPGRADE packages`
}

::04k020:: [markdown] Diferența dintre comenzile `CMD` și `ENTRYPOINT` constă în faptul că
{
    =[markdown] `CMD` permite redefinirea comenzii la rularea containerului, iar `ENTRYPOINT` - nu.
    ~[markdown] `ENTRYPOINT` permite redefinirea comenzii la rularea containerului, iar `CMD` - nu.
    ~[markdown] `CMD` și `ENTRYPOINT` efectuează aceleași acțiuni.
    ~[markdown] `CMD` și `ENTRYPOINT` efectuează acțiuni diferite.
}
