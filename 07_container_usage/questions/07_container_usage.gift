// # Întrebări pentru "Interacțiunea containerelor"

$CATEGORY: 07_container_usage/1_knowledge

::07k001:: [markdown] Vizualizarea listei de volume existente se poate face cu ajutorul comenzii\:
{
   =[markdown]`docker volume ls`
   ~[markdown]`docker volume list`
   ~[markdown]`docker volume show`
   ~[markdown]`docker volume inspect`
}

::07k002:: [markdown] Pentru a crea un volum cu numele `opt` se folosește comanda\:
{
   =[markdown]`docker volume create opt`
   ~[markdown]`docker volume create --name opt`
   ~[markdown]`docker volume make opt`
   ~[markdown]`docker volume create name\=opt`
}

::07k003:: [markdown] Pentru a vizualiza informații despre volumul `opt` se folosește comanda\:
{
   =[markdown]`docker volume inspect opt`
   ~[markdown]`docker volume show opt`
   ~[markdown]`docker volume info opt`
   ~[markdown]`docker volume ls opt`
}

::07k004:: [markdown] Pentru a șterge volumul `opt` se folosește comanda\:
{
   =[markdown]`docker volume rm opt`
   ~[markdown]`docker volume remove opt`
   ~[markdown]`docker volume delete opt`
   ~[markdown]`docker volume prune opt`
}

::07k005:: [markdown] Pentru a șterge toate volumele neutilizate se poate folosi comanda\:
{
   =[markdown]`docker volume prune`
   ~[markdown]`docker volume remove`
   ~[markdown]`docker volume clear`
   ~[markdown]`docker volume rm`
}

::07k006:: [markdown] Vizualizarea listei de rețele se poate face cu ajutorul comenzii\:
{
   =[markdown]`docker network ls`
   ~[markdown]`docker network list`
   ~[markdown]`docker network show`
   ~[markdown]`docker network inspect`
}

::07k007:: [markdown] Pentru a crea o rețea cu numele `local` se folosește comanda\:
{
   =[markdown]`docker network create local`
   ~[markdown]`docker network make --name local`
   ~[markdown]`docker network make local`
   ~[markdown]`docker network create name=local`
}

::07k008:: [markdown] Pentru a vizualiza informații despre rețeaua `local` se folosește comanda\:
{
   =[markdown]`docker network inspect local`
   ~[markdown]`docker network show local`
   ~[markdown]`docker network info local`
   ~[markdown]`docker network ls local`
}

::07k009:: [markdown] Pentru a șterge rețeaua `local` se folosește comanda\:
{
   =[markdown]`docker network rm local`
   ~[markdown]`docker network remove local`
   ~[markdown]`docker network delete local`
   ~[markdown]`docker network prune local`
}

::07k010:: [markdown] Pentru a conecta containerul `frontend` la rețeaua `local` se poate folosi comanda\:
{
   =[markdown]`docker network connect local frontend`
   ~[markdown]`docker network connect frontend local`
   ~[markdown]`docker network attach frontend local`
   ~[markdown]`docker network attach local frontend`
}

::07k011:: [markdown] Pentru a deconecta containerul `frontend` de la rețeaua `local` se poate folosi comanda\:
{
   =[markdown]`docker network disconnect local frontend`
   ~[markdown]`docker network disconnect frontend local`
   ~[markdown]`docker network detach frontend local`
   ~[markdown]`docker network detach local frontend`
}

::07k012:: [markdown] Pentru a șterge toate rețelele neutilizate se poate folosi comanda\:
{
   =[markdown]`docker network prune`
   ~[markdown]`docker network remove`
   ~[markdown]`docker network clear`
   ~[markdown]`docker network rm`
}

$CATEGORY: 07_container_usage/2_usage
// Întrebări de tip _răspuns scurt_:

::07u001:: [markdown] Pentru a crea containerul `webserver` pe baza imaginii `webserver` cu redirecționarea portului `80` containerului pe portul `8000` gazdei se folosește comanda\: {=docker create --name webserver -p 8000\:80 webserver =docker create --name webserver --port 8000\:80 webserver =docker create -p 8000\:80 --name webserver webserver =docker create --port 8000\:80 --name webserver webserver}

::07u002:: [markdown] Pentru a crea și rula containerul `webserver` pe baza imaginii `webserver` cu redirecționarea portului `80` containerului pe portul `8080` gazdei se folosește comanda\: {=docker run --name webserver -p 8080\:80 webserver =docker run -p 8080\:80 --name webserver webserver =docker run --name webserver --port 8080\:80 webserver =docker run --port 8080\:80 --name webserver webserver}

::07u003:: [markdown] Pentru a crea și rula containerul `webserver` pe baza imaginii `webserver` cu montarea volumului `opt` în directorul `/opt` al containerului se folosește comanda\: {=docker run -v opt\:/opt --name webserver webserver =docker run --volume opt\:/opt --name webserver webserver =docker run --name webserver -v opt\:/opt webserver =docker run --name webserver --volume opt\:/opt webserver}

::07u004:: [markdown] Pentru a crea și rula containerul `nodeapp` pe baza imaginii `nodeapp` cu montarea volumului `app` în directorul `/app` al containerului se folosește comanda\: {=docker run -v app\:/app --name nodeapp nodeapp =docker run --volume app\:/app --name nodeapp nodeapp =docker run --name nodeapp -v app\:/app nodeapp =docker run --name nodeapp --volume app\:/app nodeapp}

::07u005:: [markdown] Pentru a crea și rula containerul `webserver` pe baza imaginii `webserver` cu conectarea la rețeaua `local` se folosește comanda\: {= docker run --name webserver --network local webserver =docker run --network local --name webserver webserver}

::07u006:: [markdown] Pentru a crea și rula containerul `nodeapp` pe baza imaginii `nodeapp` cu conectarea la rețeaua `backend` se folosește comanda\: {=docker run --name nodeapp --network backend nodeapp =docker run --network backend --name nodeapp nodeapp}

::07u007:: [markdown] Pentru a șterge rețeaua `local` se folosește comanda\: {=docker network rm local}

::07u008:: [markdown] În Docker pentru a crea o rețea cu numele `local` se folosește comanda\: {=docker network create local}

::07u009:: [markdown] Pentru a adăuga containerul `frontend` la rețeaua `local` se folosește comanda\: {=docker network connect local frontend}

::07u010:: [markdown] În Docker pentru a crea un volum cu numele `opt` se folosește comanda\: {=docker volume create opt}

::07u011:: [markdown] Pentru a șterge volumul `opt` se folosește comanda\: {=docker volume rm opt}
